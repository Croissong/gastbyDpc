#+OPTIONS: toc:nil num:nil
#+HTML: <title>Vollständiger Sourcecode</title>
#+BEGIN_SRC sql
CREATE DATABASE IF NOT EXISTS hotelbuchung;
USE hotelbuchung;
CREATE TABLE gast(
        gast_id INT(11) AUTO_INCREMENT NOT NULL PRIMARY KEY, 
        anrede VARCHAR(15),
        vorname VARCHAR(45),
        nachname VARCHAR(45));

INSERT INTO gast (anrede, vorname, nachname) VALUES
('Herr', 'Max', 'Mustermann'),
('Herr', 'Klaus', 'Peter'),
('Frau', 'Lisa', 'Langfinger');

SELECT gast_id as ID, anrede as Anrede, vorname as Vorname, nachname as Nachname FROM gast;
CREATE TABLE IF NOT EXISTS zimmer (
        zimmer_id INT(11) NOT NULL AUTO_INCREMENT PRIMARY KEY,
        bezeichnung VARCHAR(45),
        beschreibung VARCHAR(45));

INSERT INTO zimmer(bezeichnung, beschreibung) VALUES ('101','Suite'),
    ('102','Abstellkammer'),
    ('103','4-Bett'),
    ('104','2-Bett'),
    ('105','1-Bett');

SELECT zimmer_id as ID, bezeichnung as Bezeichnung, beschreibung as Beschreibung FROM zimmer;
CREATE TABLE IF NOT EXISTS beleg_art (
        art_id INT(11) NOT NULL AUTO_INCREMENT PRIMARY KEY,
        bezeichnung VARCHAR(45),
        color VARCHAR(6));

INSERT INTO beleg_art (bezeichnung, color) VALUES
('belegt', 'FFFFFF'),
('gesperrt', '0000FF'),
('reserviert', 'FFFF00');

SELECT art_id as ID, bezeichnung as Bezeichnung, color as Farbkennung FROM beleg_art;
CREATE TABLE IF NOT EXISTS belegung(
        belegung_id INT(11) NOT NULL AUTO_INCREMENT PRIMARY KEY,
        start DATE,
        ende DATE,
        gast_id INT(11),FOREIGN KEY(gast_id) REFERENCES gast(gast_id) ON DELETE CASCADE,
        art_id INT(11),FOREIGN KEY(art_id) REFERENCES beleg_art(art_id) ON DELETE CASCADE,
        zimmer_id INT(11),FOREIGN KEY(zimmer_id) REFERENCES zimmer(zimmer_id) ON DELETE CASCADE ) ;

INSERT INTO belegung (start, ende, gast_id, art_id, zimmer_id) VALUES
    ("2016-01-01","2016-01-07",1,2,1),
    ("2016-01-01","2016-01-21",2,2,3),
    ("2016-01-08","2016-01-16",3,1,1),
    ("2016-01-25","2016-02-02",1,3,1);

SELECT belegung_id as ID, start, ende, gast_id, art_id, zimmer_id FROM belegung;
CREATE VIEW belegt AS
SELECT DISTINCT zimmer.bezeichnung AS 'Belegt' FROM belegung, zimmer
WHERE zimmer.zimmer_id = belegung.zimmer_id AND
    belegung.art_id = 1; 

SELECT * from belegt;

CREATE VIEW reserviert AS
SELECT DISTINCT zimmer.bezeichnung AS 'Reserviert' FROM belegung, zimmer
WHERE zimmer.zimmer_id = belegung.zimmer_id AND
    belegung.art_id = 2;

SELECT * from reserviert;

CREATE VIEW gesperrt AS
SELECT DISTINCT zimmer.bezeichnung AS 'Gesperrt' FROM belegung, zimmer
WHERE zimmer.zimmer_id = belegung.zimmer_id
    AND belegung.art_id = 3; 

SELECT * from gesperrt;

CREATE VIEW belegungs_dauer AS
SELECT DATEDIFF(belegung.ende, belegung.start) as Buchungstage FROM belegung
WHERE zimmer_id = 1&& start = "2016-01-01";

SELECT * from belegungs_dauer;

CREATE VIEW auslastung AS
SELECT bezeichnung as Zimmer,
    SUM(DATEDIFF(
            IF(1=MONTH(ende), ende, LAST_DAY("2016-01-01")),
            IF(1=MONTH(start), start, DATE_SUB("2016-01-01",
                    INTERVAL DAYOFMONTH("2016-01-01")-1 DAY))))
    as Buchungstage FROM belegung, zimmer
WHERE belegung.zimmer_id = zimmer.zimmer_id GROUP BY belegung.zimmer_id;

SELECT * from auslastung;

#+END_SRC
